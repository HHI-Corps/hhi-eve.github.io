/* src\pages\CreditSummary.svelte generated by Svelte v3.24.0 */
import {
	SvelteComponent,
	append,
	attr,
	destroy_each,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "/web_modules/svelte/internal.js";

import moment from "/web_modules/moment.js";
import * as api from "../api/index.js";
import { onMount } from "/web_modules/svelte.js";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[3] = i;
	return child_ctx;
}

// (35:16) {#each data as entry, i}
function create_each_block(ctx) {
	let tr;
	let th;
	let t0_value = /*i*/ ctx[3] + 1 + "";
	let t0;
	let t1;
	let td0;
	let t2_value = /*entry*/ ctx[1].name + "";
	let t2;
	let t3;
	let td1;
	let t4_value = /*entry*/ ctx[1].total_points + "";
	let t4;
	let t5;
	let td2;
	let t6_value = moment.utc(/*entry*/ ctx[1].last_update).local().format("YYYY-M-D") + "";
	let t6;
	let t7;

	return {
		c() {
			tr = element("tr");
			th = element("th");
			t0 = text(t0_value);
			t1 = space();
			td0 = element("td");
			t2 = text(t2_value);
			t3 = space();
			td1 = element("td");
			t4 = text(t4_value);
			t5 = space();
			td2 = element("td");
			t6 = text(t6_value);
			t7 = space();
			attr(th, "scope", "row");
		},
		m(target, anchor) {
			insert(target, tr, anchor);
			append(tr, th);
			append(th, t0);
			append(tr, t1);
			append(tr, td0);
			append(td0, t2);
			append(tr, t3);
			append(tr, td1);
			append(td1, t4);
			append(tr, t5);
			append(tr, td2);
			append(td2, t6);
			append(tr, t7);
		},
		p(ctx, dirty) {
			if (dirty & /*data*/ 1 && t2_value !== (t2_value = /*entry*/ ctx[1].name + "")) set_data(t2, t2_value);
			if (dirty & /*data*/ 1 && t4_value !== (t4_value = /*entry*/ ctx[1].total_points + "")) set_data(t4, t4_value);
			if (dirty & /*data*/ 1 && t6_value !== (t6_value = moment.utc(/*entry*/ ctx[1].last_update).local().format("YYYY-M-D") + "")) set_data(t6, t6_value);
		},
		d(detaching) {
			if (detaching) detach(tr);
		}
	};
}

function create_fragment(ctx) {
	let div;
	let header;
	let t1;
	let section;
	let table;
	let thead;
	let t9;
	let tbody;
	let each_value = /*data*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			div = element("div");
			header = element("header");
			header.textContent = "HHI 积分统计";
			t1 = space();
			section = element("section");
			table = element("table");
			thead = element("thead");

			thead.innerHTML = `<tr><th scope="col">#</th> 
                    <th scope="col">角色名</th> 
                    <th scope="col">积分</th> 
                    <th scope="col">最后更新时间</th></tr>`;

			t9 = space();
			tbody = element("tbody");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			attr(table, "class", "table table-striped table-hover");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, header);
			append(div, t1);
			append(div, section);
			append(section, table);
			append(table, thead);
			append(table, t9);
			append(table, tbody);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(tbody, null);
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*moment, data*/ 1) {
				each_value = /*data*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(tbody, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
			destroy_each(each_blocks, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let data = [];

	onMount(async () => {
		//const res = await api.getCreditByName("希尔维亚");
		const res = await api.getCreditSummary();

		//console.log(res);
		$$invalidate(0, data = res.data);
	});

	return [data];
}

class CreditSummary extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default CreditSummary;